definitions:
  controller.BrandInput:
    properties:
      name:
        type: string
    type: object
  controller.ChangePassInput:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      username:
        type: string
    required:
    - new_password
    - old_password
    - username
    type: object
  controller.ColorInput:
    properties:
      name:
        type: string
    type: object
  controller.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controller.ModelInput:
    properties:
      brand_id:
        type: integer
      name:
        type: string
    type: object
  controller.PhoneInput:
    properties:
      brand_id:
        type: integer
      color_id:
        type: integer
      model_id:
        type: integer
      price:
        type: string
      review_id:
        type: integer
      storage:
        type: integer
    type: object
  controller.RatingInput:
    properties:
      rating:
        type: integer
      user_id:
        type: integer
    type: object
  controller.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - role
    - username
    type: object
  controller.ReviewInput:
    properties:
      text:
        type: string
      user_id:
        type: integer
    type: object
  models.Brand:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Color:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Model:
    properties:
      brand_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Phone:
    properties:
      brand_id:
        type: integer
      color_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      model_id:
        type: integer
      price:
        type: string
      rating_id:
        type: integer
      review_id:
        type: integer
      storage:
        type: integer
      updated_at:
        type: string
    type: object
  models.Rating:
    properties:
      created_at:
        type: string
      id:
        type: integer
      rating:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Review:
    properties:
      created_at:
        type: string
      id:
        type: integer
      text:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /brands:
    get:
      description: Get a list of Brand.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Brand'
            type: array
      summary: Get all Brand.
      tags:
      - Brand
    post:
      description: Creating a new Brand.
      parameters:
      - description: the body to create a new Brand
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.BrandInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Brand'
      security:
      - BearerToken: []
      summary: Create New Brand.
      tags:
      - Brand
  /brands/{id}:
    delete:
      description: Delete a Brand by id.
      parameters:
      - description: Brand id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Brand.
      tags:
      - Brand
    get:
      description: Get an Brand by id.
      parameters:
      - description: Brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Brand'
      summary: Get Brand.
      tags:
      - Brand
    patch:
      description: Update Brand by id.
      parameters:
      - description: Brand id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update age rating category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.BrandInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Brand'
      security:
      - BearerToken: []
      summary: Update Brand.
      tags:
      - Brand
  /brands/{id}/models:
    get:
      description: Get all Models by BrandId.
      parameters:
      - description: Brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Model'
            type: array
      summary: Get Models.
      tags:
      - Brand
  /brands/{id}/phones:
    get:
      description: Get all Phones by BrandId.
      parameters:
      - description: Brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Phone'
            type: array
      summary: Get Phones.
      tags:
      - Brand
  /change_password:
    patch:
      description: Change user's password by providing the correct old password.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to change user's password
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ChangePassInput'
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            type: string
      security:
      - BearerToken: []
      summary: Change user's password.
      tags:
      - Auth
  /colors:
    get:
      description: Get a list of Color.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Color'
            type: array
      summary: Get all Color.
      tags:
      - Color
    post:
      description: Creating a new Color.
      parameters:
      - description: the body to create a new Color
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ColorInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Color'
      security:
      - BearerToken: []
      summary: Create New Color.
      tags:
      - Color
  /colors/{id}:
    delete:
      description: Delete a Color by id.
      parameters:
      - description: Color id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Color.
      tags:
      - Color
    get:
      description: Get an Color by id.
      parameters:
      - description: Color id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Color'
      summary: Get Color.
      tags:
      - Color
    patch:
      description: Update Color by id.
      parameters:
      - description: Color id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to update age rating category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ColorInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Color'
      security:
      - BearerToken: []
      summary: Update Color.
      tags:
      - Color
  /colors/{id}/phones:
    get:
      description: Get all Phones by ColorId.
      parameters:
      - description: Color id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Phone'
            type: array
      summary: Get Phones.
      tags:
      - Color
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /models:
    get:
      description: Get a list of Model.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Model'
            type: array
      summary: Get all Model.
      tags:
      - Model
    post:
      description: Creating a new Model.
      parameters:
      - description: the body to create a new Model
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ModelInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Model'
      security:
      - BearerToken: []
      summary: Create New Model.
      tags:
      - Model
  /models/{id}:
    delete:
      description: Delete a Model by id.
      parameters:
      - description: Model id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Model.
      tags:
      - Model
    get:
      description: Get an Model by id.
      parameters:
      - description: Model id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Model'
      summary: Get Model.
      tags:
      - Model
    patch:
      description: Update Model by id.
      parameters:
      - description: Model id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to update age rating category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ModelInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Model'
      security:
      - BearerToken: []
      summary: Update Model.
      tags:
      - Model
  /models/{id}/phones:
    get:
      description: Get all Phones by ModelId.
      parameters:
      - description: Model id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Phone'
            type: array
      summary: Get Phones.
      tags:
      - Model
  /phones:
    get:
      description: Get a list of Phone.
      parameters:
      - description: price filter (case insensitive search)
        in: query
        name: price
        type: string
      - description: Sort by price (asc or desc)
        in: query
        name: sortByprice
        type: string
      - description: Sort by BrandID (asc or desc)
        in: query
        name: sortByBrandID
        type: string
      - description: Sort by ColorID (asc or desc)
        in: query
        name: sortByColorID
        type: string
      - description: Sort by ModelD (asc or desc)
        in: query
        name: sortByModelD
        type: string
      - description: Sort by ReviewID (asc or desc)
        in: query
        name: sortByReviewID
        type: string
      - description: Sort by created_at (asc or desc)
        in: query
        name: sortByCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Phone'
            type: array
      summary: Get all Phone.
      tags:
      - Phone
    post:
      description: Creating a new Phone.
      parameters:
      - description: the body to create a new Phone
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.PhoneInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Phone'
      security:
      - BearerToken: []
      summary: Create New Phone.
      tags:
      - Phone
  /phones/{id}:
    delete:
      description: Delete a Phone by id.
      parameters:
      - description: Phone id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Phone.
      tags:
      - Phone
    get:
      description: Get an Phone by id.
      parameters:
      - description: Phone id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Phone'
      summary: Get Phone.
      tags:
      - Phone
    patch:
      description: Update Phone by id.
      parameters:
      - description: Phone id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to update age rating category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.PhoneInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Phone'
      security:
      - BearerToken: []
      summary: Update Phone.
      tags:
      - Phone
  /ratings:
    get:
      description: Get a list of Rating.
      parameters:
      - description: Sort by rating (asc or desc)
        in: query
        name: sortByRating
        type: string
      - description: Sort by created_at (asc or desc)
        in: query
        name: sortByCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Rating'
            type: array
      summary: Get all Rating.
      tags:
      - Rating
    post:
      description: Creating a new Rating.
      parameters:
      - description: the body to create a new Rating
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.RatingInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Rating'
      security:
      - BearerToken: []
      summary: Create New Rating.
      tags:
      - Rating
  /ratings/{id}:
    delete:
      description: Delete a Rating by id.
      parameters:
      - description: Rating id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Rating.
      tags:
      - Rating
    get:
      description: Get an Rating by id.
      parameters:
      - description: Rating id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Rating'
      summary: Get Rating.
      tags:
      - Rating
    patch:
      description: Update Rating by id.
      parameters:
      - description: Rating id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to update age rating category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.RatingInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Rating'
      security:
      - BearerToken: []
      summary: Update Rating.
      tags:
      - Rating
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
  /reviews:
    get:
      description: Get a list of Review.
      parameters:
      - description: Sort by created_at (asc or desc)
        in: query
        name: sortByCreatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get all Review.
      tags:
      - Review
    post:
      description: Creating a new Review.
      parameters:
      - description: the body to create a new Review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ReviewInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - BearerToken: []
      summary: Create New Review.
      tags:
      - Review
  /reviews/{id}:
    delete:
      description: Delete a Review by id.
      parameters:
      - description: Review id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Review.
      tags:
      - Review
    get:
      description: Get an Review by id.
      parameters:
      - description: Review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      summary: Get Review.
      tags:
      - Review
    patch:
      description: Update Review by id.
      parameters:
      - description: Review id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to update age rating category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ReviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - BearerToken: []
      summary: Update Review.
      tags:
      - Review
swagger: "2.0"
